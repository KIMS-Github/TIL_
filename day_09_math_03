Day 9
• Clips : 
		벡터와 행렬의 연산 선형대수와 해석기하의 기초1_20191015_02 ~ 04, 
		선형대수와 해석기하의 기초2_좌표와 변환_20191019_01 ~ 02

import numpy as np
A = (np.arange(9) - 4).reshape((3, 3))
A
array([[-4, -3, -2],
       [-1,  0,  1],
       [ 2,  3,  4]])
       
np.linalg.norm(A)
7.745966692414834

np.trace(np.eye(3))
3.0

A = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
np.linalg.det(A)
-9.51619735392994e-16

import numpy as np
import matplotlib.pylab as plt

# Linear Algigra
plt.rc("font", size=18)  # 그림의 폰트 크기를 18로 고정
gray = {"facecolor": "gray"}
black = {"facecolor": "black"}
red = {"facecolor": "red"}
green = {"facecolor": "green"}
blue = {"facecolor": "blue"}

a = np.array([1, 2])
plt.plot(0, 0, 'kP', ms=20)
plt.plot(a[0], a[1], 'ro', ms=20)
plt.annotate('', xy=[-0.6, 1.6], xytext=(0.2, 0.7), arrowprops=gray)
plt.annotate('', xy=a, xytext=(0, 0), arrowprops=black)
plt.annotate('', xy=a + [-1, 1], xytext=(-1, 1), arrowprops=black)
plt.annotate('', xy=a + [-1, 1], xytext=(-1, 1), arrowprops=black)
plt.text(0.35, 1.15, "$a$")
plt.text(1.15, 2.25, "$(1,2)$")
plt.text(-0.7, 2.1, "$a$")
plt.text(-0.9, 0.6, "평행이동")
plt.xticks(np.arange(-2, 4))
plt.yticks(np.arange(-1, 4))
plt.xlim(-2.4, 3.4)
plt.ylm(-0.8, 3.4)
plt.show()

# Vector Norm
a = np.array([1, 2])
np.linalg.norm(a)

2.23606797749979

#unit vector
a = np.array([1, 0])
b = np.array([0, 1])
c = np.array([1/np.sqrt(2), 1/np.sqrt(2)])
np.linalg.norm(a), np.linalg.norm(b), np.linalg.norm(c)

(1.0, 1.0, 0.9999999999999999)
